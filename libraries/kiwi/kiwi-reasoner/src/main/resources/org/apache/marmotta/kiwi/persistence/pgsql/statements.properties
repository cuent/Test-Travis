#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# rules
rules.insert          = INSERT INTO reasoner_rules (id,name,description,body,createdAt) VALUES (?,?,?,?,now())
rules.load_by_id      = SELECT id, name, description, body, createdAt FROM reasoner_rules WHERE id = ?
rules.load_by_program = SELECT R.id, R.name, R.description, R.body, R.createdAt \
  FROM reasoner_rules R, reasoner_program_rules J \
  WHERE J.program_id = ? AND J.rule_id = R.id

# delete a rule by id; the entries in reasoner_program_rules are deleted by cascading
rules.delete_by_id    = DELETE FROM reasoner_rules WHERE id = ?


namespaces.load_by_program = SELECT ns_prefix, ns_uri FROM reasoner_program_namespaces WHERE program_id = ?
namespaces.load_by_rule    = SELECT NS.ns_prefix, NS.ns_uri FROM reasoner_program_namespaces NS, reasoner_program_rules R \
  WHERE NS.program_id = R.program_id AND R.rule_id = ?

programs.insert       = INSERT INTO reasoner_programs (id, name, description) VALUES (?,?,?)
programs.add_rule     = INSERT INTO reasoner_program_rules (program_id, rule_id) VALUES (?,?)
programs.add_ns       = INSERT INTO reasoner_program_namespaces (program_id, ns_prefix, ns_uri) VALUES (?,?,?)
programs.load_by_id   = SELECT id, name, description FROM reasoner_programs WHERE id = ?
programs.load_by_name = SELECT id, name, description FROM reasoner_programs WHERE name = ?
programs.list         = SELECT id, name, description FROM reasoner_programs
programs.delete       = DELETE FROM reasoner_programs WHERE id = ?
programs.update_desc  = UPDATE reasoner_programs SET description = ? WHERE id = ?
programs.delete_ns    = DELETE FROM reasoner_program_namespaces WHERE program_id = ? AND ns_prefix = ? AND ns_uri = ?
programs.delete_rule  = DELETE FROM reasoner_program_rules WHERE program_id = ? AND rule_id = ?

justifications.insert     = INSERT INTO reasoner_justifications (id, triple_id, createdAt) VALUES (?,?,?)
justifications.add_triple = INSERT INTO reasoner_just_supp_triples (justification_id, triple_id) VALUES (?,?)
justifications.add_rule   = INSERT INTO reasoner_just_supp_rules (justification_id, rule_id) VALUES (?,?)

justifications.load_by_id     = SELECT id, triple_id, createdAt FROM reasoner_justifications WHERE id = ?
justifications.load_by_triple = SELECT id, triple_id, createdAt FROM reasoner_justifications WHERE triple_id = ?
justifications.load_by_striple = SELECT DISTINCT J.id, J.triple_id, J.createdAt \
  FROM reasoner_justifications J, reasoner_just_supp_triples T \
  WHERE J.id = T.justification_id AND T.triple_id = ?
justifications.load_by_srule   = SELECT DISTINCT J.id, J.triple_id, J.createdAt \
  FROM reasoner_justifications J, reasoner_just_supp_rules R \
  WHERE J.id = R.justification_id AND R.rule_id = ?
justifications.load_rules     = SELECT rule_id FROM reasoner_just_supp_rules WHERE justification_id = ?
justifications.load_triples   = SELECT triple_id FROM reasoner_just_supp_triples WHERE justification_id = ?

justifications.del_triple = DELETE FROM reasoner_just_supp_triples WHERE justification_id = ?
justifications.del_rule   = DELETE FROM reasoner_just_supp_rules WHERE justification_id = ?
justifications.delete     = DELETE FROM reasoner_justifications WHERE id = ?

justifications.delete_all_triples = DELETE FROM reasoner_just_supp_triples
justifications.delete_all_rules   = DELETE FROM reasoner_just_supp_rules
justifications.delete_all         = DELETE FROM reasoner_justifications

justifications.list_unsupported = SELECT T.id,T.subject,T.predicate,T.object,T.context,T.deleted,T.inferred,T.creator,T.createdAt,T.deletedAt \
  FROM triples T WHERE T.deleted = false AND T.inferred = true AND NOT EXISTS (SELECT id FROM reasoner_justifications WHERE triple_id = T.id)