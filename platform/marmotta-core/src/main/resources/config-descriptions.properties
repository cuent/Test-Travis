#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Marmotta core configuration
###############################################################################

marmotta.home.description = home directory (for configuration files etc)
marmotta.home.type = java.lang.String

kiwi.context.description = base URI of this KiWi installation; used for constructing resource URIs
kiwi.context.type = java.lang.String

kiwi.host.description = base URL of the KiWi installation; used for accessing additional web services like SOLR and H2
kiwi.host.type = java.net.URL

kiwi.path.description = the path of the KiWi installation, e.g. /marmotta, /LMF or /KiWi
kiwi.path.type = java.lang.String

kiwi.setup.host.description = true if the Marmotta system host configuration has been set up, do not change
kiwi.setup.host.type = java.lang.Boolean

kiwi.setup.database.description = true if the Marmotta system database configuration has been set up, do not change
kiwi.setup.database.type = java.lang.Boolean

kiwi.pages.startup.description = startup page to display when accessing the Marmotta admin page
kiwi.pages.startup.type = java.lang.String

kiwi.pages.project.description = Project for logo and footer
kiwi.pages.project.type = java.lang.Enum("marmotta"|"custom")

kiwi.pages.style_path.description = path to stylesheets for Marmotta Admin page
kiwi.pages.style.type = java.lang.String

debug.enabled.description = enable or disable the logging of debugging messages for the whole system
debug.enabled.type = java.lang.Boolean

linkeddata.redirect.status.description = the status code to use for redirects; 303 is used in the Linked Data \
  guidelines, but 300 is more correct according to HTTP
linkeddata.redirect.status.type = java.lang.Enum("300"|"301"|"302"|"303"|"304"|"305"|"306"|"307")


linkeddata.redirect.put.description = determines whether to issue a redirect for PUT requests; if set to true, the \
  resource service will return a redirect to the actual content or metadata location for the resource, resulting in a \
  second request to be issued by the browser; if set to false, the resource service directly processes the \
  content/metadata upload
linkeddata.redirect.put.type = java.lang.Boolean

linkeddata.mime.rel.default.description = default rel value for resource interaction with HTTP (MUST be 'meta' or 'content')
linkeddata.mime.rel.default.type = java.lang.Enum("meta"|"content")

templating.sort_by_weight.description = sort menu entries by weight instead of alphabet
templating.sort_by_weight.type = java.lang.Boolean

templating.cache.enabled.description = Recache templating files every time
templating.cache.enabled.type = java.lang.Boolean


###############################################################################
# Logging configuration
###############################################################################

logging.kiwi.core.description = configure logging for the core system; valid values: DEBUG, INFO, WARN, ERROR
logging.kiwi.core.type = java.lang.Enum("DEBUG"|"INFO"|"WARN"|"ERROR")

logging.kiwi.core.services.security.description = configure logging for the security system; valid values: DEBUG, INFO, WARN, ERROR
logging.kiwi.core.services.security.type = java.lang.Enum("DEBUG"|"INFO"|"WARN"|"ERROR")

logging.kiwi.reasoner.description = configure logging for the reasoner; valid values: DEBUG, INFO, WARN, ERROR
logging.kiwi.reasoner.type = java.lang.Enum("DEBUG"|"INFO"|"WARN"|"ERROR")



###############################################################################
# Content Readers and Writers (in case a resource is requested with ;rel=content
###############################################################################

# a reader/writer for content stored in the triple store; by default, this is applied to resources directly served
# from this LMF installation
content.triplestore.reader.description = a reader/writer for content stored in the triple store; by default, this is applied to resources directly served from this LMF installation
content.triplestore.reader.type = java.lang.String

content.triplestore.writer.type = java.lang.String

content.triplestore.pattern.type = java.lang.String

content.triplestore.enabled.type = java.lang.Boolean
#content.triplestore.enabled=true

# a reader/writer for content stored in the file system; by default, this is applied to all resources that have
# a file:/ URI. It is disabled by default, because it potentially allows reading/writing all files in the file system
# to only enable reading but disable writing, remove the content.filesystem.writer property
content.filesystem.reader.description = a reader/writer for content stored in the file system; by default, this is applied to all resources that have a file:/ URI. It is disabled by default, because it potentially allows reading/writing all files in the file system to only enable reading but disable writing, remove the content.filesystem.writer property
content.filesystem.reader.type = java.lang.String

content.filesystem.writer.type = java.lang.String

content.filesystem.pattern.type = java.lang.String

content.filesystem.enabled.type = java.lang.Boolean

content.filesystem.secure.description = if enabled allow only access to resources stored in the LMF work directory
content.filesystem.secure.type = java.lang.Boolean


# a reader for content stored on a remote HTTP server; by default, this is applied to all resources that are not in
# the context of the LMF web application; enabled by default, because it is a safe operation
content.http.reader.description =  a reader for content stored on a remote HTTP server; by default, this is applied to all resources that are not in the context of the LMF web application; enabled by default, because it is a safe operation
content.http.reader.type = java.lang.String

content.http.pattern.type = java.lang.String

content.http.enabled.type = java.lang.Boolean

###############################################################################
# Resource Filter configuration
###############################################################################

resources.browsercache.enabled.description = enable/disable browser caching of static resources; if enabled, the KiWiResourceFilter will set appropriate Expires\: headers in the response
resources.browsercache.enabled.type = java.lang.Boolean

resources.browsercache.seconds.description = ow many seconds should the Expires-header set for expiration of static resources?
resources.browsercache.seconds.type = java.lang.Integer(60|0|*)

resources.servercache.enabled.description = enable/disable server-side caching of static resources
resources.servercache.enabled.type = java.lang.Boolean

###############################################################################
# Marmotta importer configuration
###############################################################################

importer.generate_descriptions.description = generate KiWi title and text content for each imported resource in the RDF importer
importer.generate_descriptions.type = java.lang.Boolean

importer.batchsize.description = commit import-transaction X items
importer.batchsize.type = java.lang.Integer(10|0|*)

###############################################################################
# Marmotta Statistics Module
###############################################################################

# whether collecting statistics about the execution should be enabled on start or not
statistics.enabled.description = true
statistics.enabled.type = java.lang.Boolean



contexts.default.description = Default context to use for triples in case no explicit context selected (may be empty)
contexts.default.type = java.lang.String
contexts.inferred.description = Context to use for storing triples inferred automatically be the reasoner (may not be empty)
contexts.inferred.type = java.lang.String


caching.maximum_size.description = Maximum number of entries for in-memory caches used by the Marmotta Platform
caching.maximum_size.type = java.lang.Integer(1|1000|10000000)
caching.expiration.description = Maximum minutes of inactivity before a cache entry expires from the in-memory caches
caching.expiration.type   = java.lang.Integer(1|5|1440)
